name: JSVFA_pipeline

on:
  pull_request:
    branches: [ main, develop ]

jobs:
  test-suite:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
        
    - name: Configure Git
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        
    - name: Set up JDK 8
      uses: actions/setup-java@v4
      with:
        java-version: '8'
        distribution: 'temurin'
        
    - name: Install SBT
      run: |
        curl -L -o sbt.deb https://repo.scala-sbt.org/scalasbt/debian/sbt-1.9.7.deb
        sudo dpkg -i sbt.deb
        sudo apt-get update
        sudo apt-get install -f
        
    - name: Cache SBT dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.sbt
          ~/.ivy2/cache
          ~/.coursier/cache/v1
          ~/.cache/coursier/v1
          ~/AppData/Local/Coursier/Cache/v1
        key: ${{ runner.os }}-sbt-cache-v2-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}

    - name: Install library dependencies
      run: sbt update

    - name: Install system tools
      run: |
        sudo apt-get update
        sudo apt-get install -y unzip

    - name: Set up Android SDK
      env:
        ANDROID_SDK_ROOT: ${{ runner.temp }}/android-sdk
      run: |
        mkdir -p "$ANDROID_SDK_ROOT/cmdline-tools"
        # Downgraded to commandlinetools-linux-7583922_latest.zip for Java 8 compatibility

        # Use cache for Android command line tools
        if [ ! -f "$RUNNER_TEMP/cmdline-tools.zip" ]; then
          curl -fo "$RUNNER_TEMP/cmdline-tools.zip" https://dl.google.com/android/repository/commandlinetools-linux-7583922_latest.zip
        fi
        unzip -q -o "$RUNNER_TEMP/cmdline-tools.zip" -d "$ANDROID_SDK_ROOT/cmdline-tools"
        mv "$ANDROID_SDK_ROOT/cmdline-tools/cmdline-tools" "$ANDROID_SDK_ROOT/cmdline-tools/latest"
        yes | "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager" --licenses
        "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager" "platform-tools" "platforms;android-30" "build-tools;30.0.3"

    - name: Download TaintBench suite
      run: |
        # Use cache for TaintBench.zip
        if [ ! -f "$RUNNER_TEMP/TaintBench.zip" ]; then
          curl -L -o "$RUNNER_TEMP/TaintBench.zip" https://github.com/TaintBench/TaintBench/releases/download/TaintBenchSuite/TaintBench.zip
        fi
        unzip -q -o "$RUNNER_TEMP/TaintBench.zip" -d $RUNNER_TEMP/TaintBench

    - name: Run specific test suites
      env:
        # Only set GITHUB_TOKEN if it's available in secrets (for CI)
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        sbt "testOnly br.unb.cic.securibench.deprecated.SecuribenchTestSuite"
        ./run-tests.sh --android-sdk $RUNNER_TEMP/android-sdk --taint-bench $RUNNER_TEMP/TaintBench AndroidTaintBenchSuiteExperiment1
